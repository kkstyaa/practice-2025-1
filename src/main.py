import os
import telebot
import requests
from dotenv import load_dotenv

#–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
load_dotenv("token.env")
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(BOT_TOKEN)


#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞
def get_daily_horoscope(sign: str, day: str) -> dict:
    #—Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    sign_translation = {
        '–æ–≤–µ–Ω': 'aries', '—Ç–µ–ª–µ—Ü': 'taurus', '–±–ª–∏–∑–Ω–µ—Ü—ã': 'gemini',
        '—Ä–∞–∫': 'cancer', '–ª–µ–≤': 'leo', '–¥–µ–≤–∞': 'virgo',
        '–≤–µ—Å—ã': 'libra', '—Å–∫–æ—Ä–ø–∏–æ–Ω': 'scorpio', '—Å—Ç—Ä–µ–ª–µ—Ü': 'sagittarius',
        '–∫–æ–∑–µ—Ä–æ–≥': 'capricorn', '–≤–æ–¥–æ–ª–µ–π': 'aquarius', '—Ä—ã–±—ã': 'pisces'
    }

    day_translation = {
        '—Å–µ–≥–æ–¥–Ω—è': 'TODAY',
        '–∑–∞–≤—Ç—Ä–∞': 'TOMORROW',
        '–≤—á–µ—Ä–∞': 'YESTERDAY'
    }

    try:
        #–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        sign_lower = sign.strip().lower()
        day_lower = day.strip().lower()

        #–ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        sign_en = sign_translation.get(sign_lower, sign_lower)
        day_en = day_translation.get(day_lower, day_lower)

        #—Ñ–æ—Ä–º–∏—Ä–æ–≤–Ω–∏–µ —Å—Å—ã–ª–∫–∏ 
        url = "https://horoscope-app-api.vercel.app/api/v1/get-horoscope/daily"
        params = {"sign": sign_en, "day": day_en}

        #–æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()  #–ø—Ä–æ–≤–µ—Ä–∫–∞ http –æ—à–∏–±–æ–∫

        #–ø–∞—Ä—Å–∏–Ω–≥
        data = response.json()

        #–ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞
        if not data.get('success', False):
            raise ValueError("API –≤–µ—Ä–Ω—É–ª–æ –Ω–µ—É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç")

        return data

    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    except ValueError as e:
        print(f"–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

    return None


#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–≥–æ—Ä–æ—Å–∫–æ–ø ‚ú®. –ù–∞–ø–∏—à–∏ /horoscope —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø üîÆ")


@bot.message_handler(commands=['horoscope'])
def sign_handler(message):
    text = "–ö–∞–∫–æ–π —É —Ç–µ–±—è –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞? ‚ôåÔ∏è\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω: –û–≤–µ–Ω, –¢–µ–ª–µ—Ü, –ë–ª–∏–∑–Ω–µ—Ü—ã, –†–∞–∫, –õ–µ–≤, –î–µ–≤–∞, –í–µ—Å—ã, –°–∫–æ—Ä–ø–∏–æ–Ω, –°—Ç—Ä–µ–ª–µ—Ü, –ö–æ–∑–µ—Ä–æ–≥, –í–æ–¥–æ–ª–µ–π, –†—ã–±—ã."
    sent_msg = bot.send_message(message.chat.id, text)
    bot.register_next_step_handler(sent_msg, day_handler)


def day_handler(message):
    sign = message.text
    text = "–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å? üìÖ\n–í—ã–±–µ—Ä–∏: –°–µ–≥–æ–¥–Ω—è, –ó–∞–≤—Ç—Ä–∞, –í—á–µ—Ä–∞ –∏–ª–∏ –≤–≤–µ–¥–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î."
    sent_msg = bot.send_message(message.chat.id, text)
    bot.register_next_step_handler(sent_msg, fetch_horoscope, sign.capitalize())


def fetch_horoscope(message, sign):
    day = message.text
    try:
        #–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        horoscope = get_daily_horoscope(sign, day)

        if not horoscope:
            raise Exception("API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–æ")

        data = horoscope.get('data', {})

        #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
        if not data.get('date') or not data.get('horoscope_data'):
            raise ValueError("–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç–µ")

        #—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        response = f"""
‚ú® *–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign}* ‚ú®
üìÖ *–î–∞—Ç–∞:* {data['date']}
üîÆ *–ü—Ä–æ–≥–Ω–æ–∑:* {data['horoscope_data']}
"""
        bot.send_message(message.chat.id, response, parse_mode="Markdown")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {e}")
        error_msg = """
‚ö†Ô∏è *–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø!*

_–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:_
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
- –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞—Ç—ã
- –í—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –∏—Å–ø–æ–ª—å–∑—É—è:
- –û–¥–∏–Ω –∏–∑ 12 –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–û–≤–µ–Ω")
- "–°–µ–≥–æ–¥–Ω—è", "–ó–∞–≤—Ç—Ä–∞" –∏–ª–∏ "–í—á–µ—Ä–∞"
- –î–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î
"""
        bot.send_message(message.chat.id, error_msg, parse_mode="Markdown")


#–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    bot.infinity_polling()
